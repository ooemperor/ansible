# https://kvaps.medium.com/zabbix-solve-memory-monitoring-issue-inside-lxc-containers-98ddf191051c
# LXC Fix

# ct.memory.size[total]
# ct.memory.size[free]
# ct.memory.size[buffers]
# ct.memory.size[cached]
# ct.memory.size[shared]
# ct.memory.size[used]
# ct.memory.size[pused]
# ct.memory.size[available]
# ct.memory.size[pavailable]

UserParameter=ct.memory.size[*],free -b | awk '$ 1 == "Mem:" {total=$ 2;  used=($ 3+$ 5); pused=(($ 3+$ 5)*100/$ 2); free=$ 4; pfree=($ 4*100/$  2); shared=$ 5; buffers=$ 6; cache=$ 6; available=($ 6+$ 7);  pavailable=(($ 6+$ 7)*100/$ 2); if("$1" == "") {printf("%.0f", total )}  else {printf("%.0f", $1 "" )} }'

# ct.swap.size[total]
# ct.swap.size[free]
# ct.swap.size[shared]
# ct.swap.size[used]
# ct.swap.size[pused]
# ct.swap.size[available]
# ct.swap.size[pavailable]
# ct.cpu.load[percpu,avg1]
# ct.cpu.load[percpu,avg5]
# ct.cpu.load[percpu,avg15]
UserParameter=ct.swap.size[*],free -b | awk '$ 1 == "Swap:" {total=$ 2;  used=$ 3; free=$ 4; pfree=($ 4*100/$ 2); pused=($ 3*100/$ 2); if("$1" ==  "") {printf("%.0f", free )} else {printf("%.0f", $1 "" )} }'

# ct.cpu.load[percpu,avg1]
# ct.cpu.load[percpu,avg5]
# ct.cpu.load[percpu,avg15]
UserParameter=ct.cpu.load[*],uptime | awk -F'[, ]+' '{avg1=$(NF-2); avg5=$(NF-1); avg15=$(NF)}{print $2/'$(nproc)'}'